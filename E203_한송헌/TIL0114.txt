Jenkins, Docker, AWS EC2를 사용하여 Git 프로젝트를 배포하는 과정은 여러 단계로 나눠집니다. 

1. Git 프로젝트 준비
2. EC2 환경 설정
3. Docker 설치 및 설정
4. Jenkins 설치 및 설정
5. GitHub/Bitbucket 연동 및 Jenkins 파이프라인 설정
6. Docker 이미지 빌드 및 AWS EC2에 배포
7. 모니터링 및 유지보수

1. Git 프로젝트 준비
- Git: Git은 분산 버전 관리 시스템으로, 소스 코드를 관리하고 여러 개발자가 함께 작업할 수 있도록 도와줍니다.
GitHub나 GitLab, Bitbucket과 같은 원격 Git 저장소에 프로젝트를 푸시(pull)할 수 있어야 합니다.

2. EC2 환경 설정
AWS EC2(Elastic Compute Cloud)는 가상 서버를 제공하는 서비스입니다. 프로젝트를 배포할 서버 환경을 EC2 인스턴스로 구성할 수 있습니다.

- EC2 설정 절차:
- AWS 계정 만들기: AWS에 가입하고 콘솔에 로그인합니다.
- EC2 인스턴스 생성:
- AWS Console에서 EC2 서비스를 선택하고, Launch Instance를 클릭하여 새로운 EC2 인스턴스를 생성합니다.
- AMI (Amazon Machine Image): Ubuntu 또는 Amazon Linux 같은 기본 운영 체제를 선택합니다.
- 인스턴스 유형: 일반적으로 t2.micro(무료 사용 가능)로 선택할 수 있습니다.
- 보안 그룹 설정: SSH 포트(22)와 HTTP 포트(80) 또는 HTTPS 포트(443)를 열어 외부에서 접근할 수 있게 설정합니다.
- 키 페어 설정: EC2 인스턴스에 접속할 때 사용할 SSH 키를 생성하여 다운로드합니다.
- EC2 접속: SSH 클라이언트를 사용하여 EC2 인스턴스에 접속합니다. 예를 들어, 터미널에서 아래 명령어로 접속할 수 있습니다.

3. Docker 설치 및 설정
Docker는 애플리케이션을 컨테이너화하여 배포하는 도구입니다. EC2 인스턴스에 Docker를 설치하여 애플리케이션을 컨테이너로 실행할 수 있습니다.

- Docker 설치:
- EC2 인스턴스에 Docker 설치:

4. Jenkins 설치 및 설정
Jenkins는 CI/CD 도구로, 자동으로 빌드하고 테스트하며 배포하는 파이프라인을 설정하는 데 사용됩니다. Jenkins는 Docker 이미지를 빌드하고 AWS EC2에 배포하는 과정의 자동화를 담당합니다.

Jenkins 설치:
EC2 인스턴스에 Jenkins 설치:

Jenkins는 Java 기반으로 동작하므로, 먼저 Java를 설치합니다.

웹 브라우저에서 http://<EC2_PUBLIC_IP>:8080으로 접속하여 Jenkins 대시보드에 접속합니다.
처음 접속 시, unlock key를 입력해야 하는데, 해당 키는 EC2에서 아래 명령어로 확인할 수 있습니다.

5. GitHub/Bitbucket 연동 및 Jenkins 파이프라인 설정
Jenkins에서 Git 프로젝트를 자동으로 빌드하고 배포하려면 GitHub나 Bitbucket과 연동해야 합니다.

Git 플러그인 설치: Jenkins에서 Git 플러그인을 설치해야 GitHub과 연동이 가능합니다.

Jenkins 대시보드에서 Manage Jenkins > Manage Plugins로 이동 후, Git Plugin을 설치합니다.
Jenkins Job 설정:

Jenkins에서 새 Freestyle project를 생성하고, Source Code Management에서 Git을 선택한 후, GitHub 저장소 URL을 입력합니다.
Build Triggers에서 GitHub hook trigger for GITScm polling을 선택하여 GitHub에서 변경 사항을 감지하면 자동으로 빌드가 트리거되도록 설정합니다.
파이프라인 설정 (Jenkinsfile):

프로젝트 루트에 Jenkinsfile을 추가하여 빌드, 테스트, 배포를 자동화합니다. 예시 Jenkinsfile:

6. Docker 이미지 빌드 및 AWS EC2에 배포
Jenkins 파이프라인에서 Docker 이미지를 빌드하고 EC2 인스턴스에 배포하는 작업을 설정합니다.

AWS CLI 설치 및 설정:

EC2 인스턴스에서 AWS CLI를 설치하고, 배포를 위한 AWS IAM 역할을 설정해야 합니다.
aws configure 명령어를 통해 액세스 키, 시크릿 키, 지역, 출력 형식을 설정합니다.
Docker 이미지 EC2에 배포:

Jenkins에서 빌드된 Docker 이미지를 EC2로 푸시하고 실행할 수 있습니다.
Jenkinsfile에서 AWS EC2로 Docker 컨테이너를 배포하는 명령을 추가합니다.

7. 모니터링 및 유지보수
배포가 완료된 후에는 모니터링과 유지보수가 필요합니다. AWS CloudWatch를 활용하여 EC2 인스턴스와 애플리케이션을 모니터링하고, 문제 발생 시 Jenkins를 통해 자동으로 롤백할 수 있습니다.

* 이론적으로 공부해야 할 부분
- CI/CD 개념: Jenkins가 CI/CD의 핵심 도구로 동작하기 때문에, **지속적 통합 (CI)**과 **지속적 배포 (CD)**의 개념을 확실히 이해하는 것이 중요합니다.
- AWS EC2 및 보안: EC2 인스턴스를 설정하고 관리하는 방법과 보안 그룹, IAM 역할, VPC 설정 등을 이해해야 합니다.
- Docker 컨테이너화: Docker의 기본 개념과 이미지 빌드 및 관리, Docker Compose 등의 고급 기능을 배워야 합니다.