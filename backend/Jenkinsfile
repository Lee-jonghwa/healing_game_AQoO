pipeline {
    agent any

    environment {
        // Docker 이미지 이름 정의
        DOCKER_IMAGE = "s12-webmobile1-sub1/s12p11e203:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                // GitLab 리포지토리에서 코드를 체크아웃합니다.
                checkout scm
            }
        }
        
        stage('Load Environment Variables') {
            steps {
                // Secret File으로 등록한 .env 파일을 불러와서 환경 변수들을 로드 (로그 출력)
                withCredentials([file(credentialsId: 'backend-env-file', variable: 'ENV_FILE')]) {
                    script {
                        def envContent = readFile(env.ENV_FILE)
                        def lines = envContent.split("\n")
                        for (line in lines) {
                            line = line.trim()
                            if (line && !line.startsWith('#')) {
                                def pair = line.split("=")
                                if (pair.length >= 2) {
                                    def key = pair[0].trim()
                                    def value = pair[1].trim()
                                    echo "Loaded env var: ${key}=${value}"
                                }
                            }
                        }
                    }
                }
            }
        }
        
        stage('Prepare Build Context') {
            steps {
                script {
                    // withCredentials 블록을 다시 사용하여 .env 파일을 빌드 컨텍스트에 작성합니다.
                    withCredentials([file(credentialsId: 'backend-env-file', variable: 'ENV_FILE')]) {
                        def envContent = readFile(env.ENV_FILE)
                        // Jenkins 작업 디렉토리에서 backend/aqoo 폴더에 .env 파일 생성
                        writeFile file: 'backend/aqoo/.env', text: envContent
                        echo ".env file written to backend/aqoo/.env"
                    }
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image: ${DOCKER_IMAGE}"
                    // Dockerfile은 backend/aqoo 폴더에 있으므로 해당 경로로 이동합니다.
                    dir('backend/aqoo') {
                        sh "docker build -t ${DOCKER_IMAGE} ."
                    }
                }
            }
        }
        
        stage('Test') {
            steps {
                echo "Running tests..."
                // 테스트 명령어를 추가하세요.
            }
        }
        
        stage('Deploy') {
            steps {
                echo "Deploying application..."
                // 배포 작업(예: docker push ${DOCKER_IMAGE})을 추가하세요.
            }
        }
    }
    
    post {
        always {
            echo "Pipeline completed."
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
